[GENERAL]
# Set full path of the PanTools pangenome db to be pre-processed for PanVA
pangenome_path =
# Pantools db extension to the alignments/{msa_per_group}/{msa_per_group_var}/grouping_v#/
group_extension = alignments/msa_per_group/grouping_v1
# Set destination for the pre-processed files that can be used in PanVA.
panva_dir = panva_export
# Set max number of cores that can be used.
core_count = 10
# Set location and name for log file
logfile = export_to_panva.log

[HOMOLOGY]
# Set which homology groups should be pre-processed, options are: all or path to file with selection of homology ids
# selection = all
selection = all

[MSA]
# define type of alignment done (currently supports msa_per_group, msa_per_group_var)
msa_type = msa_per_group
# set minimal alignment length filter (nucleotide level) only processes homology groups with >= alignment lengths (int)
min_align_len = 90
# set minimal number of members present per homology group (default = 2 lower will have no alignments)
min_num_members = 2
# set minimal numer of unique members (genomes) (default = 1, going higher will remove all unique homology groups)
min_uniq_members = 1

[PHENOMETA]
# Include phenotype/metadata information in the pre-processing
pheno_info = TRUE
# To include phenotype/metadata specific variant information (all, empty, path/to/list_like.txt)
# Recommended: read file 'groups_with_phenotype_changes_nuc.txt' select phenotypes of interest
pheno_var =
# Include resequencing metadata. Must be a path to the metadata csv file including a column called "id" containing
# accession ids. The format for this file is identical to the phenotype file used for PanTools,
# except for the "id" column instead of "genome".
reseq_meta =

[GENE_CLASS]
# select which classification was used
classification = gene_classification/
